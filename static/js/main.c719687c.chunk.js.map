{"version":3,"sources":["template/Select.jsx","template/Jumbotron.jsx","consts.js","components/Home.jsx","components/NewVaga.jsx","components/Vaga.jsx","components/Login.jsx","components/Account.jsx","components/CustomNav.jsx","components/CustomNavDev.jsx","components/NewUser.jsx","components/Footer.jsx","main/Routes.jsx","serviceWorker.js","index.js","main/App.jsx"],"names":["Select","props","react_default","a","createElement","Col","xs","md","FormGroup","ControlLabel","label","FormControl","componentClass","id","placeholder","onChange","evt","value","items","map","it","key","ID","Sigla","areaAt","tipoVaga","Nome","op","remu","Feedback","HelpBlock","error","Junbt","Jumbotron","this","subTitle","style","color","title","detalhes","Component","consts","URL","Home","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","vagas","estados","cidades","search","estado","cidade","handleSearch","bind","assertThisInitialized","clearSearch","carregarEstado","select","target","estadoId","filter","e","novasCidades","c","Estado","setState","objectSpread","handleInputChange","_this2","axios","get","concat","then","res","data","_this3","_this$state$search","console","log","sucess","_this4","vaga","_id","Panel","Link","to","Body","className","nomeCont","errors","isValid","keys","length","_this5","_this$state","_this$state2","_this$validate","validate","Grid","Row","Jumbotron_Junbt","Button","bsStyle","onClick","type","mdOffset","disabled","block","showVagas","FieldGroup","_ref","objectWithoutProperties","controlId","MaskInput","_ref2","lib_default","mask","name","NewVaga","viagem","idUser","undefined","numCont","emailCont","desc","logged","input","preventDefault","post","history","push","catch","err","verifyToken","token","localStorage","getItem","headers","authorization","user","rows","xsOffset","bsSize","handleSubmit","Vaga","match","params","resp","help","MyAccount","login","msg","numInc","password","disable","setItem","window","location","reload","Alert","Login_FieldGroup","Label","Account","vagasPub","changePassword","currentPassword","newPassword","userName","getVagas","tokenValid","action","Account_FieldGroup","Table","responsive","CustomNav","handleLogout","removeItem","Navbar","default","collapseOnSelect","Header","Brand","Toggle","Collapse","Nav","NavItem","NavLink","href","children","NewUser","nome","cel","email","signUp","message","handleClear","NewUser_FieldGroup","NewUser_MaskInput","maxLength","components_Footer","Routes","HashRouter","CustomNavDev_CustomNav","Switch","Route","exact","path","component","exatc","Login","Redirect","from","Boolean","hostname","ReactDOM","render","main_Routes","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c719687c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Col, FormGroup, FormControl, ControlLabel, HelpBlock } from 'react-bootstrap'\r\n\r\nconst mapItems = (items) => {\r\n    return items.map(it => (\r\n        <option key={it.ID} value={it.Sigla || it.areaAt || it.tipoVaga || it.Nome || it.op || it.remu}>\r\n            {it.Nome || it.areaAt || it.tipoVaga || it.remu || it.op}\r\n        </option>\r\n    ));\r\n}\r\n\r\nexport default props => (\r\n    <Col xs={props.xs} md={props.md}>\r\n\r\n        <FormGroup >\r\n\r\n            <ControlLabel>{props.label}</ControlLabel>\r\n            <FormControl componentClass=\"select\"\r\n                id={props.id}\r\n                placeholder=\"select\"\r\n                onChange={(evt) => {\r\n                    if (props.onChange) { props.onChange(evt); }\r\n                }}\r\n            >\r\n                <option value=\"0\">Selecione</option>\r\n                {mapItems(props.items)}\r\n            </FormControl>\r\n            <FormControl.Feedback />\r\n            <HelpBlock>{props.error || false}</HelpBlock>\r\n        </FormGroup>\r\n\r\n    </Col>\r\n)\r\n\r\n","import React, { Component } from 'react';\r\nimport { Jumbotron } from 'react-bootstrap'\r\nimport '../css/jumb.css'\r\n\r\nexport default class Junbt extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Jumbotron >\r\n                    <span>{this.props.subTitle}</span>\r\n                    <h1 style={{ color: '#fff' }}>{this.props.title}</h1>\r\n                    <p>{this.props.detalhes}</p>\r\n                </Jumbotron>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","export default {\r\n    API_URL: 'https://backend-advagas.herokuapp.com/api/'\r\n}","import React, { Component } from 'react';\r\nimport { Col, Grid, Row, Button, Panel } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport Select from '../template/Select'\r\nimport Jumbotron from '../template/Jumbotron'\r\n// import Vaga from '../components/Vaga'\r\nimport estados from '../utils/estados.json';\r\nimport cidades from '../utils/cidades.json';\r\nimport areaAt from '../utils/areaAt.json'\r\nimport '../css/vagas.css' \r\n\r\nimport consts from '../consts'\r\n\r\nconst URL = consts.API_URL\r\n\r\nclass Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            vagas: [],\r\n            estados,\r\n            cidades: [],\r\n            areaAt,\r\n            search: {\r\n                estado: \"\",\r\n                cidade: [],\r\n                areaAt: \"\"\r\n            }\r\n        };\r\n        this.handleSearch = this.handleSearch.bind(this)\r\n        this.clearSearch = this.clearSearch.bind(this)\r\n        this.carregarEstado = this.carregarEstado.bind(this)\r\n    }\r\n\r\n    carregarEstado(select) {\r\n      \r\n        let estado = select.target.value || '';\r\n        let estadoId = estados.filter(e => e.Sigla === estado)[0].ID\r\n\r\n        let novasCidades = [];\r\n\r\n        if (estadoId) {\r\n            novasCidades = cidades.filter(c => c.Estado === estadoId);\r\n        }\r\n\r\n        this.setState(state => ({\r\n            ...state,\r\n            search: {\r\n                ...state.search,\r\n                ...estado,\r\n            },\r\n            cidades: novasCidades\r\n        }))\r\n\r\n        this.handleInputChange(estado)\r\n    }\r\n\r\n    handleInputChange(select) {\r\n\r\n        this.setState(state => ({\r\n            ...state,\r\n            search: {\r\n                ...state.search,\r\n                ...select\r\n            }\r\n        }))\r\n\r\n    }\r\n\r\n    clearSearch() {\r\n        axios.get(`${URL}/vagas`)\r\n            .then(res => this.setState({ vagas: res.data }))\r\n    }\r\n\r\n    handleSearch() {\r\n        let { estado, cidade, areaAt } = this.state.search;\r\n\r\n        if (cidade === \"\" && areaAt === \"\") {\r\n            axios.get(`${URL}/vaga/${estado}/0/0`)\r\n                .then(res => {\r\n                    console.log(res, this.state.vagas)\r\n                    if (res.data.sucess === true) {\r\n                        const vagas = res.data.vagas\r\n                        this.setState({ vagas })\r\n                    } else {\r\n                        this.setState({ vagas: [] })\r\n                    }\r\n                })\r\n        }\r\n\r\n        else if (areaAt === \"\") {\r\n            axios.get(`${URL}/vaga/${estado}/${cidade}/0`)\r\n                .then(res => {\r\n                    if (res.data.sucess === true) {\r\n                        const vagas = res.data.vagas\r\n                        this.setState({ vagas })\r\n                    } else {\r\n                        this.setState({ vagas: [] })\r\n                    }\r\n                })\r\n        }\r\n\r\n        else if (cidade === \"\") {\r\n            axios.get(`${URL}/vaga/${estado}/0/${areaAt}`)\r\n                .then(res => {\r\n                    if (res.data.sucess === true) {\r\n                        const vagas = res.data.vagas\r\n                        this.setState({ vagas })\r\n                    } else {\r\n                        this.setState({ vagas: [] })\r\n                    }\r\n                })\r\n        } else {\r\n            axios.get(`${URL}/vaga/${estado}/${cidade}/${areaAt}`)\r\n                .then(res => {\r\n                    if (res.data.sucess === true) {\r\n                        const vagas = res.data.vagas\r\n                        this.setState({ vagas })\r\n                    } else {\r\n                        this.setState({ vagas: [] })\r\n                    }\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(`${URL}/vagas`)\r\n            .then(res => this.setState({ vagas: res.data }))\r\n    }\r\n\r\n    showVagas() {\r\n\r\n        return this.state.vagas.map(vaga => (\r\n\r\n            <Col xs={12} md={12} key={vaga._id}>\r\n                < Panel >\r\n                    <Link to={`/vaga/${vaga._id}`} >\r\n                        <Panel.Body >\r\n                            <span className=\"tipoVaga\">{vaga.tipoVaga} </span> <br />\r\n                            <span className=\"nomeCont\">Contratante:{vaga.nomeCont}</span> <br />\r\n                            <span className=\"regCid\"><b>Cidade/Estado</b>{vaga.cidade}/{vaga.estado}</span> <br />\r\n                            <span className=\"areaAt\"><b>Area de Atuacao:</b>{vaga.areaAt} </span>\r\n                        </Panel.Body>\r\n                    </Link>\r\n                </Panel>\r\n            </Col>\r\n\r\n        ));\r\n\r\n    }\r\n\r\n    validate() {\r\n        const errors = {}\r\n        const { search } = this.state\r\n        console.log(search)\r\n\r\n        if (!search.estado) errors.estado = 'Estado é Obrigátorio!'\r\n\r\n        return {\r\n            errors,\r\n            isValid: Object.keys(errors).length === 0\r\n        };\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const { estados, cidades, areaAt } = this.state;\r\n        const { search, vagas } = this.state;\r\n        const { errors, isValid } = this.validate();\r\n        console.log(errors)\r\n        return (\r\n\r\n            <Grid>\r\n                <Row>\r\n                    <Jumbotron title='Procure por sua vaga de maneira simples e fácil!' />\r\n                    <Select xs={12} md={4}\r\n                        label=\"Selecione o Estado\"\r\n                        id={estados.ID}\r\n                        items={this.state.estados}\r\n                        value={search.estado}\r\n                        error={!!errors.estado && errors.estado}\r\n                        onChange={this.carregarEstado} />\r\n\r\n                    <Select xs={12} md={3}\r\n                        label=\"Selecione a Cidade\"\r\n                        items={this.state.cidades}\r\n                        id=\"cidade\"\r\n                        value={search.cidade}\r\n                        onChange={e => this.handleInputChange({ cidade: e.target.value })} />\r\n\r\n                    <Select xs={12} md={3}\r\n                        label=\"Oportunidades para: \"\r\n                        items={areaAt}\r\n                        id=\"areaAt\"\r\n                        value={search.areaAt}\r\n                        onChange={e => this.handleInputChange({ areaAt: e.target.value })} />\r\n                    <Col md={2}>\r\n                        <Button\r\n                            bsStyle=\"info\"\r\n                            onClick={this.clearSearch}\r\n                            type=\"submit\"> Limpar Filtro\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row >\r\n                    <Col xs={3} mdOffset={4} >\r\n                        <Button\r\n                            bsStyle=\"info\"\r\n                            disabled={!isValid}\r\n                            onClick={this.handleSearch}\r\n                            block={true}\r\n                            type=\"submit\"> Pesquisar\r\n                        </Button>\r\n\r\n                    </Col>\r\n\r\n                </Row>\r\n                <br />\r\n                <br />\r\n                <Row>\r\n                    {vagas === [] ? <span>Não há vagas com os parametros :(</span> : this.showVagas()}\r\n\r\n                </Row>\r\n\r\n            </Grid>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n\r\n","import React, { Component } from 'react'\r\nimport { Grid, Row, Col, FormGroup, FormControl, Button, HelpBlock, ControlLabel } from 'react-bootstrap'\r\nimport MaskedFormControl from 'react-bootstrap-maskedinput'\r\nimport axios from 'axios'\r\nimport Jumbtron from '../template/Jumbotron'\r\nimport Select from '../template/Select'\r\nimport areaAt from '../utils/areaAt.json'\r\nimport estados from '../utils/estados.json'\r\nimport cidades from '../utils/cidades.json'\r\nimport remu from '../utils/remuneracao.json'\r\nimport viagem from '../utils/op.json'\r\nimport tipoVaga from '../utils/tipoVaga.json'\r\nimport '../css/pageHeader.css'\r\nimport '../css/newVaga.css'\r\n\r\nimport consts from '../consts'\r\n\r\nconst URL = consts.API_URL\r\n\r\nfunction FieldGroup({ id, label, ...props }) {\r\n    return (\r\n        <FormGroup controlId={id}>\r\n            <ControlLabel>{label} </ControlLabel>\r\n            <FormControl {...props} />\r\n            <FormControl.Feedback />\r\n            <HelpBlock>{props.error || false}</HelpBlock>\r\n        </FormGroup>\r\n    );\r\n}\r\nfunction MaskInput({ id, label, ...props }) {\r\n    return (\r\n        <FormGroup controlId={id}>\r\n            <ControlLabel>{label} </ControlLabel>\r\n            <MaskedFormControl\r\n                type={props.type}\r\n                mask={props.mask}\r\n                name={props.name}\r\n                onChange={props.onChange} />\r\n            <FormControl.Feedback />\r\n            <HelpBlock>{props.error || false}</HelpBlock>\r\n        </FormGroup>\r\n    );\r\n}\r\nclass NewVaga extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            areaAt,\r\n            tipoVaga,\r\n            remu,\r\n            viagem,\r\n            estados: estados,\r\n            cidades: [],\r\n            vaga: {\r\n                idUser: undefined,\r\n                nomeCont: \"\",\r\n                areaAt: \"\",\r\n                tipoVaga: \"\",\r\n                estado: \"\",\r\n                cidade: \"\",\r\n                remu: \"\",\r\n                viagem: \"\",\r\n                numCont: \"\",\r\n                emailCont: \"\",\r\n                desc: \"\"\r\n            },\r\n            logged: ''\r\n\r\n\r\n        };\r\n    }\r\n    carregarEstado(select) {\r\n        let estado = select.target.value || '';\r\n\r\n        // estados.filter(e => e.Sigla === estado)[0].ID)\r\n\r\n        let estadoId = estados.filter(e => e.Sigla === estado)[0].ID\r\n\r\n        console.log('Estado selecionado', estado);\r\n        let novasCidades = [];\r\n\r\n        if (estadoId) {\r\n            novasCidades = cidades.filter(c => c.Estado == estadoId);\r\n        }\r\n\r\n        this.setState(state => ({\r\n            ...state,\r\n            vaga: {\r\n                ...state.vaga,\r\n                estado,\r\n            },\r\n            cidades: novasCidades\r\n        }));\r\n\r\n        console.log(this.state)\r\n    }\r\n\r\n    handleInputChange(input) {\r\n\r\n        this.setState(state => ({\r\n            ...state,\r\n            vaga: {\r\n                ...state.vaga,\r\n                ...input\r\n            }\r\n        }))\r\n        console.log(this.state.vaga)\r\n    }\r\n\r\n    validate() {\r\n        const errors = {}\r\n        const { vaga } = this.state\r\n        if (!vaga.nomeCont) errors.nomeCont = 'Nome do Contratante é Obrigátorio!'\r\n        if (!vaga.areaAt) errors.areaAt = 'Area de Atuação é Obrigátoria!'\r\n        if (!vaga.estado) errors.estado = 'Estado é Obrigátorio!'\r\n        if (!vaga.cidade) errors.cidade = 'Cidade é Obrigátoria!'\r\n        if (!vaga.remu) errors.remu = 'Remuneração é Obrigátoria!'\r\n        if (!vaga.viagem) errors.viagem = 'Disp. de Viagem é Obrigátorio!'\r\n        if (!vaga.numCont) errors.numCont = 'Numero de Contato é Obrigátorio!'\r\n        if (!vaga.emailCont) errors.emailCont = 'Email para Contato é Obrigátorio!'\r\n        if (!vaga.desc) errors.desc = 'Descrição é Obrigátorio!'\r\n\r\n        return {\r\n            errors,\r\n            isValid: Object.keys(errors).length === 0\r\n        };\r\n\r\n    }\r\n\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        const { vaga } = this.state;\r\n\r\n        axios.post(`${URL}/newVaga`, vaga)\r\n            .then(res => this.props.history.push('/'))\r\n            .catch(err => console.log(err))\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.verifyToken()\r\n    }\r\n\r\n    verifyToken() {\r\n        const token = localStorage.getItem('token')\r\n        axios.get(`${URL}/auth/me`, { headers: { 'authorization': `${token}` } })\r\n            .then(res => {\r\n                console.log(res)\r\n                if (res.data.sucess === true) {\r\n                    const idUser = { idUser: res.data.user.id }\r\n\r\n                    this.setState({ logged: true })\r\n                    this.setState(state => ({\r\n                        ...state,\r\n                        vaga: {\r\n                            ...state.vaga,\r\n                            ...idUser\r\n                        }\r\n                    }))\r\n                    console.log(this.state.vaga)\r\n                } else {\r\n                    this.setState({ logged: false })\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n        const { vaga } = this.state;\r\n        const { errors, isValid } = this.validate()\r\n        console.log(this.state)\r\n        return (\r\n\r\n            <Grid>\r\n                <Row>\r\n                    <Jumbtron title=\"Cadastre uma Nova Oportunidade!\" />\r\n                </Row>\r\n\r\n\r\n                <Row>\r\n                    <Col xs={12} md={3}>\r\n                        <FieldGroup\r\n                            id=\"nomeCont\"\r\n                            type=\"text\"\r\n                            label=\"Contratante *\"\r\n                            name=\"nomeCont\"\r\n                            value={vaga.nomeCont}\r\n                            error={errors.nomeCont}\r\n                            onChange={e => this.handleInputChange({ nomeCont: e.target.value })}\r\n                        />\r\n\r\n                    </Col>\r\n\r\n                    <Col xs={12} md={3}>\r\n                        <Select\r\n                            id=\"areaAt\"\r\n                            label=\"Area de Atuação*\"\r\n                            name=\"areaAt\"\r\n                            items={this.state.areaAt}\r\n                            value={vaga.areaAt}\r\n                            error={errors.areaAt}\r\n                            onChange={e => this.handleInputChange({ areaAt: e.target.value })}\r\n                        />\r\n                    </Col>\r\n\r\n                    <Col xs={6} md={3}>\r\n                        <Select\r\n                            id=\"estado\"\r\n                            label=\"Estado *\"\r\n                            name=\"estado\"\r\n                            items={this.state.estados}\r\n                            value={vaga.estado}\r\n                            error={errors.estado}\r\n                            onChange={this.carregarEstado.bind(this)}\r\n                        />\r\n                    </Col>\r\n\r\n                    <Col xs={6} md={3}>\r\n                        <Select\r\n                            id=\"cidade\"\r\n                            label=\"Cidade *\"\r\n                            name=\"cidade\"\r\n                            items={this.state.cidades}\r\n                            value={vaga.cidade}\r\n                            error={errors.cidade}\r\n                            onChange={e => this.handleInputChange({ cidade: e.target.value })}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={6} md={3}>\r\n                        <Select\r\n                            id=\"remu\"\r\n                            label=\"Remuneração *\"\r\n                            name=\"remu\"\r\n                            items={this.state.remu}\r\n                            value={vaga.remu}\r\n                            error={errors.remu}\r\n                            onChange={e => this.handleInputChange({ remu: e.target.value })}\r\n                        />\r\n                    </Col>\r\n\r\n                    <Col xs={6} md={3}>\r\n                        <Select\r\n                            id=\"viagem\"\r\n                            label=\"Disponibilidade de Viagem *\"\r\n                            name=\"viagem\"\r\n                            items={this.state.viagem}\r\n                            value={vaga.viagem}\r\n                            error={errors.viagem}\r\n                            onChange={e => this.handleInputChange({ viagem: e.target.value })}\r\n                        />\r\n                    </Col>\r\n\r\n                    <Col xs={6} md={3}>\r\n                        <MaskInput\r\n                            id=\"numCont\"\r\n                            type=\"text\"\r\n                            label=\"Número para Contato *\"\r\n                            name='numCont'\r\n                            mask='11-11111-1111'\r\n                            value={vaga.numCont}\r\n                            error={errors.numCont}\r\n                            onChange={e => this.handleInputChange({ numCont: e.target.value })}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={6} md={3}>\r\n                        <FieldGroup\r\n                            id=\"emailCont\"\r\n                            type=\"email\"\r\n                            label=\"E-mail para Contato *\"\r\n                            name=\"emailCont\"\r\n                            value={vaga.emailCont}\r\n                            error={errors.emailCont}\r\n                            onChange={e => this.handleInputChange({ emailCont: e.target.value })}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col xs={12} md={3}>\r\n                        <Select\r\n                            id=\"tipoVaga\"\r\n                            label=\"Tipo de Vaga *\"\r\n                            name=\"tipoVaga\"\r\n                            items={this.state.tipoVaga}\r\n                            value={vaga.tipoVaga}\r\n                            // error={errors.areaAt}\r\n                            onChange={e => this.handleInputChange({ tipoVaga: e.target.value })}\r\n                        />\r\n                    </Col>\r\n\r\n                    <Col xs={12} md={9}>\r\n                        <FormGroup >\r\n                            <ControlLabel>Pré Requisitos</ControlLabel>\r\n                            <FormControl\r\n                                rows={4}\r\n                                id=\"desc\"\r\n                                componentClass=\"textarea\"\r\n                                name=\"desc\"\r\n                                placeholder=\"Descreva os requisitos e detalhes da vaga.\"\r\n                                value={vaga.desc}\r\n                                error={errors.desc}\r\n                                onChange={e => this.handleInputChange({ desc: e.target.value })}\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col xsOffset={5} mdOffset={5} >\r\n                        <Button\r\n                            bsSize=\"large\"\r\n                            bsStyle=\"info\"\r\n                            type=\"submit\"\r\n                            disabled={!isValid}\r\n                            onClick={this.handleSubmit.bind(this)}\r\n                        > Cadastrar</Button>\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n            </Grid >\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewVaga;","import React, { Component } from 'react';\r\nimport { Col, Grid, Row } from 'react-bootstrap';\r\nimport Jumbotron from '../template/Jumbotron';\r\nimport axios from 'axios'\r\nimport estados from '../utils/estados.json'\r\nimport cidades from '../utils/cidades.json'\r\nimport areaAt from '../utils/areaAt.json'\r\nimport '../css/jumb.css'\r\nimport '../css/vaga.css'\r\n\r\nimport consts from '../consts'\r\n\r\nconst URL = consts.API_URL\r\n\r\nclass Vaga extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            vaga: []\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const id = this.props.match.params.id;\r\n        axios.get(`${URL}/vaga/${id}`)\r\n            .then(resp => this.setState({ vaga: resp.data[0] }))\r\n\r\n        const { vaga } = this.state;\r\n        const renderVaga = () => {\r\n            return (\r\n                <Grid >\r\n\r\n                    <Col xs={12} md={12} className=\"vaga\">\r\n                        <Row>\r\n                            <Jumbotron title={`Contratante: ${vaga.nomeCont}`} />\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <p>Area de Atuação: <span>{vaga.areaAt} </span></p>\r\n                        </Row>\r\n                        <Row>\r\n                            <p>Cidade/Estado: <span>{vaga.cidade}/{vaga.estado} </span></p>\r\n                        </Row>\r\n                        <Row>\r\n                            <p>Disponibilidade de Viagem: <span>{vaga.viagem} </span></p>\r\n                        </Row>\r\n                        <Row>\r\n                            <p>Remuneração: <span>{vaga.remu} </span></p>\r\n                        </Row>\r\n                        <Row>\r\n                            <p>Email para Contato: <span>{vaga.emailCont} </span></p>\r\n                        </Row>\r\n                        <Row>\r\n                            <p>Numero para Contato: <span>{vaga.numCont} </span></p>\r\n                        </Row>\r\n                        <Row>\r\n                            <p>Requisitos da Vaga: <span>{vaga.desc} </span></p>\r\n                        </Row>\r\n                    </Col>\r\n\r\n                </Grid>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {renderVaga()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Vaga;","import React, { Component } from 'react';\r\nimport { Grid, Row, Col, FormGroup, ControlLabel, FormControl, Button, HelpBlock, Alert } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport '../css/MyAccount.css'\r\n\r\n\r\nimport consts from '../consts'\r\n\r\nconst URL = consts.API_URL\r\n\r\n\r\nfunction FieldGroup({ id, label, ...props }) {\r\n    return (\r\n        <FormGroup controlId={id}>\r\n            <ControlLabel>{label} </ControlLabel>\r\n            <FormControl {...props} />\r\n            <FormControl.Feedback />\r\n            <HelpBlock>{props.help}</HelpBlock>\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nclass MyAccount extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            login: {\r\n                sucess: undefined,\r\n                msg: undefined,\r\n            },\r\n            user: {\r\n                numInc: \"\",\r\n                password: \"\"\r\n            },\r\n            disable:undefined\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    handleInputChange(input) {\r\n\r\n        this.setState(state => ({\r\n            ...state,\r\n            user: {\r\n                ...state.user,\r\n                ...input\r\n            }\r\n        }))\r\n        console.log(this.state.user)\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        const { user } = this.state;\r\n     \r\n        axios.post(`${URL}/auth/login`, user)\r\n            .then(res => {\r\n                const msg = res.data.msg\r\n                const sucess = res.data.sucess\r\n                this.setState({\r\n                    login: {\r\n                        sucess,\r\n                        msg\r\n                    }\r\n                })\r\n                \r\n                if(sucess){\r\n                    localStorage.setItem('token', res.data.token)\r\n                    window.location.reload()\r\n                    this.props.history.push('/')\r\n                }\r\n               \r\n            }\r\n\r\n            )\r\n    }\r\n    render() {\r\n        const { user } = this.state;\r\n        const { login } = this.state;\r\n        return (\r\n\r\n            <Grid>\r\n\r\n                <Row>\r\n                    <Col xs={12} mdOffset={4} md={4}>\r\n                        {\r\n                            login.sucess === false ? (\r\n                                <Alert bsStyle=\"danger\">\r\n                                    <strong>{login.msg} - </strong>\r\n                                </Alert>\r\n                            ) :\r\n                                ''\r\n                        }\r\n                        <FieldGroup\r\n                            id=\"numInc\"\r\n                            type=\"text\"\r\n                            label=\"Numero de Inscrição \"\r\n                            value={user.numInc}\r\n                            onChange={e => this.handleInputChange({ numInc: e.target.value })}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col xs={12} mdOffset={4} md={4}>\r\n                        <FieldGroup\r\n                            id=\"password\"\r\n                            type=\"password\"\r\n                            label=\"Senha \"\r\n                            value={user.password}\r\n                            help={<Link to=\"/myAccount/newUser\">Não possui uma conta?Clique Aqui!</Link>}\r\n                            onChange={e => this.handleInputChange({ password: e.target.value })}\r\n                        />\r\n                    </Col>\r\n\r\n                </Row>\r\n                <Row>\r\n                    <Col xsOffset={5} mdOffset={6} >\r\n                        <Button\r\n                            bsSize=\"large\"\r\n                            bsStyle=\"info\"\r\n                            type=\"submit\"\r\n                            value=\"submit\"\r\n                            onClick={this.handleSubmit}\r\n                        > Entrar</Button>\r\n                    </Col>\r\n                </Row>\r\n\r\n               \r\n\r\n\r\n            </Grid>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyAccount;","import React, { Component } from 'react';\r\nimport { Grid, Row, Col, FormGroup, Label, FormControl, Button, HelpBlock, Table } from 'react-bootstrap'\r\nimport Jumbotron from '../template/Jumbotron'\r\nimport axios from 'axios'\r\nimport '../css/Account.css'\r\n\r\nimport consts from '../consts'\r\n\r\nconst URL = consts.API_URL\r\n\r\nfunction FieldGroup({ id, label, ...props }) {\r\n    return (\r\n        <FormGroup controlId={id}>\r\n            <Label>{label} </Label>\r\n            <FormControl {...props} />\r\n            <FormControl.Feedback />\r\n            <HelpBlock>{props.error || false}</HelpBlock>\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nclass Account extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            vagasPub: [],\r\n            changePassword: {\r\n                currentPassword: \"\",\r\n                newPassword: \"\"\r\n            },\r\n            idUser: '',\r\n            userName: '',\r\n\r\n        }\r\n    }\r\n\r\n    handleInputChange(input) {\r\n\r\n        this.setState(state => ({\r\n            ...state,\r\n            changePassword: {\r\n                ...state.changePassword,\r\n                ...input\r\n            }\r\n        }))\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.verifyToken()\r\n        this.getVagas()\r\n    }\r\n\r\n\r\n    verifyToken() {\r\n        const token = localStorage.getItem('token')\r\n        axios.get(`${URL}/auth/me`, { headers: { 'authorization': `${token}` } })\r\n            .then(res => {\r\n                \r\n                console.log(res)\r\n                if (res.data.sucess === true) {\r\n                    this.setState({\r\n                        idUser: res.data.user.id,\r\n                    })\r\n                } else {\r\n                    this.setState({ tokenValid: false })\r\n                }\r\n            }\r\n            )\r\n    }\r\n\r\n\r\n    getVagas() {\r\n        console.log(this.state.idUser)\r\n        axios.get(`${URL}/vagas/${this.state.idUser}`)\r\n        .then(res => {\r\n            console.log(res)\r\n        })\r\n      \r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const { changePassword } = this.state;\r\n\r\n        return (\r\n\r\n            <Grid >\r\n                {/* Alteração de Senha */}\r\n                <Jumbotron title=\"Alteração de Senha\" />\r\n\r\n\r\n                <Row className=\"formPass\">\r\n                    <form action=\"\">\r\n\r\n                        <Col xs={4} md={3}>\r\n                            <FieldGroup\r\n                                id=\"currentPass\"\r\n                                type=\"password\"\r\n                                label=\"Senha Atual *\"\r\n                                value={changePassword.currentPassword}\r\n                                // error={errors.nomeCont}\r\n                                onChange={e => this.handleInputChange({ currentPassword: e.target.value })}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={4} md={3}>\r\n                            <FieldGroup\r\n                                id=\"newPassword\"\r\n                                type=\"password\"\r\n                                label=\"Nova Senha *\"\r\n                                value={changePassword.newPassword}\r\n                                // error={errors.nomeCont}\r\n                                onChange={e => this.handleInputChange({ newPassword: e.target.value })}\r\n                            />\r\n                        </Col>\r\n\r\n                        <Col xs={4} md={4} >\r\n                            <Button\r\n                                bsStyle=\"info\"\r\n                                type=\"submit\"\r\n                                value=\"submit\"\r\n                            // disabled={!isValid}\r\n                            > Alterar</Button>\r\n                        </Col>\r\n                    </form>\r\n                </Row>\r\n\r\n\r\n                <Jumbotron title=\"Vagas Publicadas\" />\r\n                <Table responsive>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Contratante da Vaga</th>\r\n                            <th>Data de Publicação </th>\r\n                            <th>Pessoas com interesse </th>\r\n                            <th>Remover</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                        {/* {this.renderVagas()} */}\r\n\r\n                    </tbody>\r\n                </Table>\r\n\r\n\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Account;","import React, { Component } from 'react'\r\nimport { Col, Navbar, Nav, NavItem } from 'react-bootstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport '../css/customNav.css'\r\nimport '../css/pageHeader.css'\r\n\r\nimport consts from '../consts'\r\n\r\nconst URL = consts.API_URL\r\n\r\nexport default class CustomNav extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tokenValid: undefined\r\n        }\r\n\r\n        this.handleLogout = this.handleLogout.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.verifyToken()\r\n    }\r\n\r\n    verifyToken() {\r\n        const token = localStorage.getItem('token')\r\n        axios.get(`${URL}/auth/me`, { headers: { 'authorization': `${token}` } })\r\n            .then(res => {\r\n              \r\n                if (res.data.sucess === true) {\r\n                    this.setState({ tokenValid: true })\r\n                } else {\r\n                    this.setState({ tokenValid: false })\r\n                }\r\n            }\r\n            )\r\n    }\r\n\r\n    handleLogout(e) {\r\n        localStorage.removeItem('token');\r\n        window.location.reload()\r\n    }\r\n    render() {\r\n\r\n        const { tokenValid } = this.state;\r\n        console.log(tokenValid)\r\n        return (\r\n            <Col>\r\n                <Navbar default collapseOnSelect>\r\n                    <Navbar.Header>\r\n                        <Navbar.Brand>\r\n                            {/* <Image src=\"assets/oablogo.png\" /> */}\r\n                        </Navbar.Brand>\r\n                        <Navbar.Toggle />\r\n                    </Navbar.Header>\r\n                    <Navbar.Collapse >\r\n                        <Nav >\r\n\r\n                            <NavItem\r\n                                componentClass={NavLink}\r\n                                href=\"/\"\r\n                                to=\"/\">\r\n                                Home\r\n                        </NavItem>\r\n                            {\r\n                                tokenValid ? (\r\n                                    <NavItem\r\n                                        componentClass={NavLink}\r\n                                        href='/newVaga'\r\n                                        to='/newVaga'>\r\n                                        Publicar uma Vaga\r\n                                 </NavItem>\r\n                                ) :\r\n                                    <NavItem\r\n                                        componentClass={NavLink}\r\n                                        href='/myAccount/login'\r\n                                        to='/myAccount/login'>\r\n                                        Publicar uma Vaga\r\n                                 </NavItem>\r\n                            }\r\n\r\n                            {\r\n                                tokenValid === true ? (\r\n                                    <NavItem\r\n                                        componentClass={NavLink}\r\n                                        href='/myAccount'\r\n                                        to='/myAccount'\r\n                                    >\r\n                                        Minha Conta\r\n                                    </NavItem>\r\n                                ) : (\r\n                                        <NavItem\r\n                                            componentClass={NavLink}\r\n                                            href='/myAccount/login'\r\n                                            to='/myAccount/login'\r\n                                        >\r\n                                            Minha Conta\r\n                                      </NavItem>\r\n                                    )\r\n\r\n                            }\r\n\r\n                            {\r\n                                tokenValid ? (\r\n                                    <NavItem\r\n                                        componentClass={NavLink}\r\n                                        href='/'\r\n                                        to='/'\r\n                                        onClick={this.handleLogout}\r\n                                    >\r\n                                        Sair\r\n                                    </NavItem>\r\n                                ) :\r\n                                    (\r\n                                        <NavItem\r\n                                            componentClass={NavLink}\r\n                                            href='/myAccount/login'\r\n                                            to='/myAccount/login'\r\n                                        >\r\n                                            Entrar\r\n                                    </NavItem>\r\n                                    )\r\n\r\n                            }\r\n\r\n\r\n\r\n\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                {this.props.children}\r\n            </Col>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Col, Navbar, Nav, NavItem } from 'react-bootstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport '../css/customNav.css'\r\nimport '../css/pageHeader.css'\r\n\r\nimport consts from '../consts'\r\n\r\nconst URL = consts.API_URL\r\n\r\nexport default class CustomNav extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tokenValid: undefined\r\n        }\r\n\r\n        this.handleLogout = this.handleLogout.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.verifyToken()\r\n    }\r\n\r\n    verifyToken() {\r\n        const token = localStorage.getItem('token')\r\n        axios.get(`${URL}/auth/me`, { headers: { 'authorization': `${token}` } })\r\n            .then(res => {\r\n              \r\n                if (res.data.sucess === true) {\r\n                    this.setState({ tokenValid: true })\r\n                } else {\r\n                    this.setState({ tokenValid: false })\r\n                }\r\n            }\r\n            )\r\n    }\r\n\r\n    handleLogout(e) {\r\n        localStorage.removeItem('token');\r\n        window.location.reload()\r\n    }\r\n    render() {\r\n\r\n        const { tokenValid } = this.state;\r\n        console.log(tokenValid)\r\n        return (\r\n            <Col>\r\n                <Navbar default collapseOnSelect>\r\n                    <Navbar.Header>\r\n                        <Navbar.Brand>\r\n                            {/* <Image src=\"assets/oablogo.png\" /> */}\r\n                        </Navbar.Brand>\r\n                        <Navbar.Toggle />\r\n                    </Navbar.Header>\r\n                    <Navbar.Collapse >\r\n                        <Nav >\r\n\r\n                            <NavItem\r\n                                componentClass={NavLink}\r\n                                href=\"/\"\r\n                                to=\"/\">\r\n                                Home\r\n                        </NavItem>\r\n                           \r\n                                    <NavItem\r\n                                        componentClass={NavLink}\r\n                                        href='/newVaga'\r\n                                        to='/newVaga'>\r\n                                        Publicar uma Vaga\r\n                                 </NavItem>\r\n                               \r\n\r\n                         \r\n                                    <NavItem\r\n                                        componentClass={NavLink}\r\n                                        href='/myAccount'\r\n                                        to='/myAccount'\r\n                                    >\r\n                                        Minha Conta\r\n                                    </NavItem>\r\n                                ) \r\n                            }\r\n\r\n                         \r\n                                                                            <NavItem\r\n                                            componentClass={NavLink}\r\n                                            href='/myAccount/login'\r\n                                            to='/myAccount/login'\r\n                                        >\r\n                                            Entrar\r\n                                    </NavItem>\r\n                                    \r\n\r\n                            }\r\n\r\n\r\n\r\n\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                {this.props.children}\r\n            </Col>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Grid, Row, Col, FormGroup, ControlLabel, FormControl, Button, HelpBlock, Alert } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Jumbotron from '../template/Jumbotron'\r\nimport MaskedFormControl from 'react-bootstrap-maskedinput'\r\nimport axios from 'axios'\r\n\r\nimport consts from '../consts'\r\n\r\nconst URL = consts.API_URL\r\n\r\nfunction FieldGroup({ id, label, ...props }) {\r\n    return (\r\n        <FormGroup controlId={id}>\r\n            <ControlLabel>{label} </ControlLabel>\r\n            <FormControl {...props} />\r\n\r\n            <FormControl.Feedback />\r\n            <HelpBlock>{props.error || false}</HelpBlock>\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nfunction MaskInput({ id, label, ...props }) {\r\n    return (\r\n        <FormGroup controlId={id}>\r\n            <ControlLabel>{label} </ControlLabel>\r\n            <MaskedFormControl type='text' mask={props.mask} onChange={props.onChange} />\r\n            <FormControl.Feedback />\r\n            <HelpBlock>{props.error || false}</HelpBlock>\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nclass NewUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                nome: \"\",\r\n                cel: \"\",\r\n                email: \"\",\r\n                numInc: \"\",\r\n                password: \"\"\r\n            },\r\n            signUp: {\r\n                sucess: undefined,\r\n                message: undefined\r\n            },\r\n            logged:false\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleClear = this.handleClear.bind(this);\r\n    }\r\n\r\n\r\n\r\n    handleInputChange(input) {\r\n\r\n        this.setState(state => ({\r\n            ...state,\r\n            user: {\r\n                ...state.user,\r\n                ...input\r\n            }\r\n        }))\r\n        console.log(this.state.user)\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        const { user } = this.state;\r\n\r\n        console.log(user)\r\n        e.preventDefault()\r\n        axios.post(`${URL}/newUser`, user)\r\n            .then(res => {\r\n                if (res.data.sucess === true) {\r\n                    this.setState({ signUp: { sucess: true, message: res.data.msg } })\r\n                    this.handleClear()\r\n                } else {\r\n                    this.setState({ signUp: { sucess: false } })\r\n                    this.handleClear()\r\n                }\r\n            })\r\n    }\r\n\r\n    handleClear(){\r\n        \r\n       this.setState({\r\n           user:{\r\n            nome: \"\",\r\n            cel: \"\",\r\n            email: \"\",\r\n            numInc: \"\",\r\n            password: \"\"\r\n           }\r\n       })\r\n    }\r\n\r\n\r\n\r\n    validate() {\r\n\r\n        const errors = {}\r\n        const { user } = this.state;\r\n        const { sucess} = this.state.signUp;\r\n\r\n        if (!user.nome) errors.nome = 'Nome é Obrigátorio!'\r\n        if (!user.cel) errors.cel = 'Celular é Obrigátorio!'\r\n        if (!user.email) errors.email = 'Email é Obrigátorio!'\r\n        if (!user.numInc) errors.numInc = 'Numero de Inscrição é Obrigátorio!'\r\n        if (!user.password) errors.password = 'Senha é Obrigátoria  '\r\n\r\n        return {\r\n            errors,\r\n            isValid: Object.keys(errors).length === 0\r\n        };\r\n\r\n    }\r\n    render() {\r\n        const { user } = this.state;\r\n        const { isValid } = this.validate();\r\n        const { message } = this.state.signUp;\r\n        return (\r\n            <Grid>\r\n\r\n                <Jumbotron title=\"Criação de conta\" />\r\n                <Row>\r\n                    <Col xs={12} md={12}>\r\n                        {\r\n                            this.state.signUp.sucess !== undefined ? (\r\n                                this.state.signUp.sucess === true ?\r\n                                <Alert bsStyle=\"info\">\r\n                                <strong>{message} - </strong>\r\n                                    <Link to=\"/myAccount/login\">Clique Aqui</Link> para se logar.\r\n                                </Alert>\r\n                            :\r\n                            <Alert bsStyle=\"danger\" >\r\n                                <strong>Erro ao se Cadastrar - </strong>\r\n                                    Tente novamente.\r\n                                </Alert>\r\n                            \r\n                            ) :\r\n                            ''\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n                <form >\r\n                    <Row>\r\n                        <Col xs={12} md={4}>\r\n                            <FieldGroup\r\n                                id=\"nome\"\r\n                                type=\"text\"\r\n                                label=\"Nome \"\r\n                                value={user.nome}\r\n                                onChange={e => this.handleInputChange({ nome: e.target.value })}\r\n                            />\r\n                        </Col>\r\n\r\n                        <Col xs={6} md={4}>\r\n                            <MaskInput\r\n                                id=\"cel\"\r\n                                type=\"number\"\r\n                                mask='11-11111-1111'\r\n                                label=\"Celular \"\r\n                                value={user.cel}\r\n                                onChange={e => this.handleInputChange({ cel: e.target.value })}\r\n                            />\r\n                        </Col>\r\n\r\n                        <Col xs={6} md={4}>\r\n                            <FieldGroup\r\n                                id=\"email\"\r\n                                type=\"email\"\r\n                                label=\"Email \"\r\n                                value={user.email}\r\n                                onChange={e => this.handleInputChange({ email: e.target.value })}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col xs={6} md={4}>\r\n                            <FieldGroup\r\n                                id=\"numInc\"\r\n                                type=\"text\"\r\n                                maxLength={10}\r\n                                label=\"Nº de Incrição \"\r\n                                value={user.numInc}\r\n                                onChange={e => this.handleInputChange({ numInc: e.target.value })}\r\n                            />\r\n                        </Col>\r\n\r\n                        <Col xs={6} md={4}>\r\n                            <FieldGroup\r\n                                id=\"password\"\r\n                                type=\"password\"\r\n                                label=\"Senha \"\r\n                                value={user.password}\r\n                                onChange={e => this.handleInputChange({ password: e.target.value })}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xsOffset={5} mdOffset={5} >\r\n                            <Button\r\n                                bsSize=\"large\"\r\n                                bsStyle=\"info\"\r\n                                type=\"submit\"\r\n                                disabled={!isValid}\r\n                                onClick={this.handleSubmit }\r\n                            > Cadastrar</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </form>\r\n\r\n\r\n\r\n            </Grid>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewUser;","import React from 'react'\r\nimport '../css/Footer.css'\r\n\r\nexport default () => (\r\n    <footer>\r\n        <div className=\"footerCont\">\r\n            <span className=\"titleFooter\"> &copy; OABVAGAS-2018</span>\r\n        </div>\r\n    </footer>\r\n)","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\r\n\r\nimport Home from '../components/Home'\r\nimport NewVaga from '../components/NewVaga'\r\nimport Vaga from '../components/Vaga'\r\nimport Login from '../components/Login'\r\nimport Account from '../components/Account'\r\nimport CustomNav from '../components/CustomNav'\r\nimport CustomNavDev from '../components/CustomNavDev'\r\nimport NewUser from '../components/NewUser';\r\nimport Footer from '../components/Footer'\r\n\r\nimport axios from 'axios'\r\n\r\nimport consts from '../consts'\r\n\r\nconst URL = consts.API_URL\r\n\r\nclass Routes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tokenValid: undefined\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.verifyToken()\r\n    }\r\n\r\n    verifyToken() {\r\n        const token = localStorage.getItem('token')\r\n        axios.get(`${URL}/auth/me`, { headers: { 'authorization': `${token}` } })\r\n            .then(res => {\r\n                console.log(res)\r\n                if (res.data.sucess === true) {\r\n                    this.setState({ tokenValid: true })\r\n                }else{\r\n                    this.setState({ tokenValid: false })\r\n                }\r\n            }\r\n            )\r\n    }\r\n    render() {\r\n        const { tokenValid } = this.state;\r\n        return (\r\n            <Router >\r\n                <div>\r\n                    <CustomNavDev />\r\n                        {/* Sem Validacao de Token */}\r\n                         {/* <Route exact path='/' component={Home} />\r\n                        <Route exact path='/vaga/:id' component={Vaga} />\r\n                        <Route exact path='/myAccount/' component={Account} />\r\n                        <Route exact path='/myAccount/newUser' component={NewUser} />\r\n                        <Route exact path='/myAccount/login' component={Login} />\r\n                        <Route exact path='/newVaga' component={NewVaga} /> */}\r\n                         {/* COM Validacao de Token */}\r\n                    <Switch>\r\n                        <Route exact path='/' component={Home} />\r\n                        <Route exact path='/vaga/:id' component={Vaga} />\r\n                        {\r\n                            tokenValid === false ?\r\n                                (<Route exatc path='/newVaga' component={Login} />)\r\n                                :\r\n                                (<Route exact path='/newVaga' component={NewVaga} />)\r\n                        }\r\n\r\n                        {\r\n                            tokenValid === false ? \r\n                            (<Route exact path='/myAccount' component={Login} />)\r\n                            :\r\n                            (<Route exact path='/myAccount/' component={Account} />)\r\n\r\n                        }\r\n\r\n                        <Route exact path='/myAccount/newUser' component={NewUser} />\r\n                        <Route exact path='/myAccount/login' component={Login} />\r\n                        <Redirect from ='*' to='/'/>\r\n                    </Switch>\r\n                    <Footer/>\r\n                </div>\r\n            </Router>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Routes;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './main/App'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n    , document.getElementById('app'))\n\nserviceWorker.unregister();\n","import React from 'react';\r\nimport Routes from './Routes'\r\n\r\nexport default () => (\r\n    <div >\r\n        <Routes />\r\n    </div>\r\n)\r\n"],"sourceRoot":""}